{"version":3,"sources":["webpack://webjs/./src/Models/location.js","webpack://webjs/./src/Models/Location.js","webpack://webjs/./src/index.js","webpack://webjs/./src/Models/Data.js","webpack://webjs/./src/Views/MainView.js","webpack://webjs/./src/Views/NavigationView.js","webpack://webjs/./src/Controllers/MainController.js","webpack://webjs/./src/Controllers/NavigationController.js","webpack://webjs/./src/Controllers/StepController.js"],"names":["Location","name","this","amount","visitors","jsonString","localStorage","getItem","dataobject","JSON","parse","console","log","locations","length","currentLocation","location","push","splice","setItem","stringify","mainView","windowSize","gridSize","paneSize","mainController","navigationController","stepController","generateGrid","setStep","data","step","generateStep1","block","document","getElementById","className","nameInput","createElement","setAttribute","id","nameInputLabel","htmlFor","innerHTML","inputblock1","appendChild","visitorsInput","visitorsInputLabel","inputblock2","submitButton","grid","style","position","width","height","rows","cols","i","j","addGridPane","x","y","gridPane","left","top","navigationView","addEventListener","addLocation","refreshNavigation","getData","deleteLocation","generateLocationMenu","clearNavigation","nav","forEach","navItem","deleteButton","deletebutton","elements","getElementsByClassName","parentNode","removeChild","gridView","loc","getLocation","generateStep","init"],"mappings":"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","file":"main.js","sourcesContent":["export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","import MainController from './Controllers/MainController.js'\r\nimport NavigationController from './Controllers/NavigationController.js'\r\nimport StepController from './Controllers/StepController.js'\r\n\r\nimport MainView from './Views/MainView.js'\r\nimport NavigationView from './Views/NavigationView.js'\r\n\r\nimport Data from './Models/Data.js'\r\n\r\nlet jsonString = localStorage.getItem('data');\r\nlet dataobject = JSON.parse(jsonString);\r\nconsole.log(dataobject);\r\n\r\nconst data = new Data(dataobject);\r\n\r\n\r\nlocalStorage.setItem('data', JSON.stringify(data));\r\n\r\nconst mainView = new MainView();\r\nconst navigationView = new NavigationView();\r\n\r\nconst mainController = new MainController(mainView,data);\r\nconst navigationController = new NavigationController(navigationView,data);\r\nconst stepController = new StepController(mainView,data);\r\n\r\nmainView.init(mainController, navigationController, stepController);\r\nnavigationView.init(mainController, navigationController, stepController);\r\n\r\n\r\n\r\n","import Location from \"./Location\"\r\n\r\nexport default class Data {\r\n    constructor(dataobject) {\r\n        if(dataobject.locations.length <= 0) {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        else if(dataobject != null) {\r\n            console.log(\"hier\");\r\n            this.locations = dataobject.locations;\r\n            this.currentLocation = dataobject.currentLocation;\r\n        } else {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        console.log(this)\r\n    }\r\n\r\n    addLocation(location) {\r\n        this.locations.push(location);\r\n    }\r\n    deleteLocation(location) {\r\n        this.locations.splice(location - 1,1)\r\n    }\r\n    getLocation(location) {\r\n        return this.locations[location - 1];\r\n    }\r\n}","export default class MainView {\r\n    constructor() {\r\n       this.windowSize = 750;\r\n       this.gridSize = 15;\r\n       this.paneSize = this.windowSize / this.gridSize;\r\n    }\r\n\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n\r\n        this.generateGrid();\r\n        let step = stepController.setStep(1);\r\n        \r\n    }\r\n\r\n    generateStep(data, step, location) {\r\n        switch (step) {\r\n            case 1: this.generateStep1(data); break;\r\n            case 2: console.log(\"stap 2\"); break;\r\n            default: console.log(step + \"default zou niet moeten!\"); break;\r\n        }\r\n    }\r\n\r\n    generateStep1(data) {\r\n        let block = document.getElementById(\"configuration_block\");\r\n        block.className = 'h-full';\r\n        let nameInput = document.createElement(\"input\");\r\n        nameInput.setAttribute('type', 'text');\r\n        nameInput.id = 'nameInput';\r\n        let nameInputLabel = document.createElement(\"label\");\r\n        nameInputLabel.htmlFor = 'nameInput';\r\n        nameInputLabel.innerHTML = 'Name: ';\r\n\r\n        let inputblock1 = document.createElement(\"div\");\r\n        inputblock1.appendChild(nameInputLabel);\r\n        inputblock1.appendChild(nameInput);\r\n\r\n        let visitorsInput = document.createElement(\"input\");\r\n        visitorsInput.setAttribute('type', 'number');\r\n        visitorsInput.id = 'visitorsInput';\r\n        let visitorsInputLabel = document.createElement(\"label\");\r\n        visitorsInputLabel.htmlFor = 'visitorseInput';\r\n        visitorsInputLabel.innerHTML = 'Visitors: ';\r\n\r\n        let inputblock2 = document.createElement(\"div\");\r\n\r\n        \r\n        let submitButton = document.createElement(\"button\");\r\n        submitButton.innerHTML = 'next step';\r\n        submitButton.className = 'p-2 bg-green-500 hover:bg-green-800 hover:text-white w-full';\r\n        \r\n       \r\n\r\n        \r\n\r\n        inputblock1.className = \"mb-5 flex flex-col\";\r\n        inputblock2.className = \"mb-5 flex flex-col\";\r\n\r\n        inputblock2.appendChild(visitorsInputLabel);\r\n        inputblock2.appendChild(visitorsInput);\r\n\r\n        \r\n\r\n        block.appendChild(inputblock1);\r\n        block.appendChild(inputblock2);\r\n        block.appendChild(submitButton);\r\n        \r\n        \r\n    }\r\n\r\n    generateGrid() {\r\n        let paneSize = this.paneSize;\r\n        let windowSize = this.windowSize;\r\n        console.log(paneSize);\r\n        const grid = document.getElementById(\"grid\");\r\n                        grid.style.position = \"relative\";\r\n                        grid.style.width = `${windowSize}px`;\r\n                        grid.style.height = `${windowSize}px`;\r\n                        \r\n        let rows = this.gridSize;\r\n                    let cols = this.gridSize;\r\n                    for(let i = 0; i < rows; i++) {\r\n                        for(let j = 0; j < cols; j++) {\r\n                            addGridPane(j, i);\r\n                        }\r\n                    }\r\n                    function addGridPane(x, y) {\r\n                        const gridPane = document.createElement(\"div\");\r\n                        gridPane.className =  `border gridpane absolute border border-black hover:bg-gray-400`;\r\n                        gridPane.id = `x${x}y${y}`;\r\n                        gridPane.style.left = `${x * paneSize}px`;\r\n                        gridPane.style.top = `${y * paneSize}px`;\r\n                        gridPane.style.height = `${paneSize}px`;\r\n                        gridPane.style.width = `${paneSize}px`;\r\n                        gridPane.style.position = \"absolute\"\r\n                        grid.appendChild(gridPane);\r\n                    }\r\n    }\r\n   \r\n    \r\n}","export default class NavigationView {\r\n    constructor() {\r\n\r\n    }\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n        const addLocationButton = document.getElementById('addLocation');\r\n        \r\n        addLocationButton.addEventListener('click', () => {this.addLocation()});\r\n        this.navigationController.refreshNavigation();\r\n\r\n    \r\n       \r\n       \r\n    }\r\n\r\n    test() {\r\n        console.log(navigationController.getData());\r\n    }\r\n    \r\n    \r\n    deleteLocation(i) {\r\n        this.navigationController.deleteLocation(i);\r\n    }\r\n\r\n    addLocation() {\r\n        this.navigationController.addLocation();\r\n    }\r\n\r\n\r\n    refreshNavigation(data) {\r\n        this.generateLocationMenu(data);\r\n    }\r\n\r\n    generateLocationMenu(data) {\r\n        this.clearNavigation();\r\n        const nav = document.getElementById(\"nav\");\r\n        let i =1;\r\n        data.locations.forEach( function(location) {\r\n            let name = 'naam onbekend';\r\n            if(location.name != null) {\r\n                let name = location.name;\r\n            }\r\n            const navItem = document.createElement(\"button\");\r\n            navItem.innerHTML = `Naam`;\r\n            navItem.className = `navbutton bg-gray-200 p-3 pb-2 hover:bg-gray-500 hover:text-white flex flex-row`;\r\n            navItem.id = `location${i}`;\r\n            \r\n            const deleteButton = document.createElement(\"button\");\r\n            deleteButton.id = `deletelocation${i}`;\r\n            deleteButton.className = ` bg-red-500 hover:bg-red-800 hover:text-white ml-4 pr-2 pl-2`;\r\n            deleteButton.innerHTML = `X`;\r\n\r\n            navItem.appendChild(deleteButton);\r\n            nav.appendChild(navItem);\r\n            i++;\r\n        }\r\n        )\r\n        for(let i = 1; i <= data.locations.length; i++) {\r\n            let deletebutton = document.getElementById(`deletelocation${i}`);\r\n            console.log(deletebutton)\r\n            deletebutton.addEventListener('click', () => { this.deleteLocation(i)});\r\n        }   \r\n        \r\n    }\r\n\r\n    clearNavigation() {\r\n        let elements = document.getElementsByClassName('navbutton');\r\n        while(elements.length > 0){\r\n            elements[0].parentNode.removeChild(elements[0]);\r\n        }\r\n    }\r\n}","export default class MainController {\r\n    constructor(gridView, data) {\r\n        this.data = data;\r\n        this.gridView = gridView;\r\n    }\r\n\r\n    \r\n    getData() {\r\n        return data;\r\n    }\r\n\r\n    generateGrid() {\r\n        function generateGrid() {\r\n            paneSize = 50;\r\n            let rows = 15;\r\n                        let cols = 15;\r\n                        for(let i = 0; i < rows; i++) {\r\n                            for(let j = 0; j < cols; j++) {\r\n                                addGridPane(j, i);\r\n                            }\r\n                        }\r\n                        function addGridPane(x, y) {\r\n                            const gridPane = document.createElement(\"div\");\r\n                            gridPane.className =  `border gridpane absolute border border-black hover:bg-gray-400`;\r\n                            gridPane.id = `x${x}y${y}`;\r\n                            gridPane.style.left = `${x * paneSize}px`;\r\n                            gridPane.style.top = `${y * paneSize}px`;\r\n                            const grid = document.getElementById(\"grid\");\r\n                            grid.appendChild(gridPane);\r\n                        }\r\n        }\r\n    }\r\n}\r\n","import Location from \"../Models/location\"\r\n\r\nexport default class NavigationController {\r\n    constructor(navigationView, data) {\r\n        this.data = data;\r\n        this.navigationView = navigationView;\r\n    }\r\n\r\n    addLocation() {\r\n        this.data.addLocation(new Location());\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n\r\n    }\r\n\r\n    deleteLocation(location) {\r\n        this.data.deleteLocation(location);\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n        \r\n    }\r\n\r\n    getData() {\r\n        return this.data;\r\n    }\r\n\r\n    refreshNavigation() {\r\n        this.navigationView.refreshNavigation(this.data);\r\n    }\r\n}","export default class StepController {\r\n    constructor(mainView, data) {\r\n        this.data = data;\r\n        this.mainView = mainView;\r\n    }\r\n\r\n    setStep(loc) {\r\n        let location = this.data.getLocation(loc);\r\n\r\n        console.log(location);\r\n\r\n        if(location.name == null || locations.visitors == null) {\r\n            this.mainView.generateStep(this.data,1, location);\r\n        }\r\n    }\r\n}"],"sourceRoot":""}