{"version":3,"sources":["webpack://webjs/./src/Models/GridBlock.js","webpack://webjs/./src/Models/Grid.js","webpack://webjs/./src/Models/location.js","webpack://webjs/./src/Models/Location.js","webpack://webjs/./src/index.js","webpack://webjs/./src/Models/Data.js","webpack://webjs/./src/Views/MainView.js","webpack://webjs/./src/Views/NavigationView.js","webpack://webjs/./src/Controllers/MainController.js","webpack://webjs/./src/Controllers/NavigationController.js","webpack://webjs/./src/Controllers/StepController.js"],"names":["GridBlock","this","isFilled","fillType","newIsFilled","newFillType","Grid","array","i","j","Location","name","amount","visitors","jsonString","localStorage","getItem","dataobject","JSON","parse","console","log","locations","length","currentLocation","location","push","splice","setItem","stringify","mainView","windowSize","gridSize","paneSize","mainController","navigationController","stepController","generateGrid","setStep","generateImages","dropEvents","data","step","generateStep1","block","document","getElementById","className","nameInput","createElement","setAttribute","id","nameInputLabel","htmlFor","innerHTML","inputblock1","appendChild","visitorsInput","visitorsInputLabel","inputblock2","submitButton","grid","style","position","width","height","rows","cols","addGridPane","x","y","gridPane","left","top","imageBlock","tenten","generateImage","drankkramen","eetkramen","toiletten","bredebomen","hogebomen","prullenbakken","schaduwbomen","type","image","src","amountInputLabel","inputblock","dropzones","querySelector","el","pastCoordinates","newNode","addEventListener","e","target","cloneNode","preventDefault","coordinates","parentNode","isGridFilled","hasAttribute","removeAttribute","setGridFill","pastImage","firstChild","removeChild","updateGridImages","remove","navigationView","addLocation","refreshNavigation","getData","deleteLocation","generateLocationMenu","clearNavigation","nav","forEach","navItem","deleteButton","deletebutton","elements","getElementsByClassName","mainGrid","slice","indexOf","getFilled","setFill","setFilled","loc","getLocation","generateStep","init"],"mappings":"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","file":"main.js","sourcesContent":["export default class GridBlock {\r\n    \r\n    constructor() {\r\n        this.isFilled = false;\r\n        this.fillType = null;\r\n    }\r\n\r\n    setFilled(newIsFilled) {\r\n        this.isFilled = newIsFilled;\r\n    }\r\n\r\n    getFilled() {\r\n        return this.isFilled;\r\n    }\r\n\r\n    setFillType(newFillType) {\r\n        this.fillType = newFillType;\r\n    }\r\n\r\n    getFillType() {\r\n        return this.fillType;\r\n    }\r\n}","import GridBlock from \"../Models/GridBlock\";\r\n\r\nexport default class Grid {\r\n    \r\n    constructor() {\r\n        this.array = [];\r\n        for (var i = 0; i < 15; i++) {\r\n            this.array[i] = [];\r\n            for (var j = 0; j < 15; j++) {\r\n                this.array[i][j] = new GridBlock();\r\n            }\r\n        }\r\n    }\r\n}","export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n        \r\n        \r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n        \r\n        \r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","import MainController from './Controllers/MainController.js'\r\nimport NavigationController from './Controllers/NavigationController.js'\r\nimport StepController from './Controllers/StepController.js'\r\n\r\nimport MainView from './Views/MainView.js'\r\nimport NavigationView from './Views/NavigationView.js'\r\n\r\nimport Data from './Models/Data.js'\r\n\r\nlet jsonString = localStorage.getItem('data');\r\nlet dataobject = JSON.parse(jsonString);\r\nconsole.log(dataobject);\r\n\r\nconst data = new Data(dataobject);\r\n\r\n\r\nlocalStorage.setItem('data', JSON.stringify(data));\r\n\r\nconst mainView = new MainView();\r\nconst navigationView = new NavigationView();\r\n\r\nconst mainController = new MainController(mainView,data);\r\nconst navigationController = new NavigationController(navigationView,data);\r\nconst stepController = new StepController(mainView,data);\r\n\r\nmainView.init(mainController, navigationController, stepController);\r\nnavigationView.init(mainController, navigationController, stepController);\r\n\r\n\r\n\r\n","import Location from \"./Location\"\r\n\r\nexport default class Data {\r\n    constructor(dataobject) {\r\n        if(dataobject.locations.length <= 0) {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        else if(dataobject != null) {\r\n            console.log(\"hier\");\r\n            this.locations = dataobject.locations;\r\n            this.currentLocation = dataobject.currentLocation;\r\n        } else {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        console.log(this)\r\n    }\r\n\r\n    addLocation(location) {\r\n        this.locations.push(location);\r\n    }\r\n    deleteLocation(location) {\r\n        this.locations.splice(location - 1,1)\r\n    }\r\n    getLocation(location) {\r\n        return this.locations[location - 1];\r\n    }\r\n}","export default class MainView {\r\n    constructor() {\r\n       this.windowSize = 750;\r\n       this.gridSize = 15;\r\n       this.paneSize = this.windowSize / this.gridSize;\r\n    }\r\n\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n\r\n        this.generateGrid();\r\n        let step = stepController.setStep(1);\r\n        this.generateImages();\r\n        this.dropEvents();\r\n    }\r\n\r\n    generateStep(data, step, location) {\r\n        switch (step) {\r\n            case 1: this.generateStep1(data); break;\r\n            case 2: console.log(\"stap 2\"); break;\r\n            default: console.log(step + \"default zou niet moeten!\"); break;\r\n        }\r\n    }\r\n\r\n    generateStep1(data) {\r\n        let block = document.getElementById(\"configuration_block\");\r\n        block.className = 'h-full';\r\n        let nameInput = document.createElement(\"input\");\r\n        nameInput.setAttribute('type', 'text');\r\n        nameInput.id = 'nameInput';\r\n        let nameInputLabel = document.createElement(\"label\");\r\n        nameInputLabel.htmlFor = 'nameInput';\r\n        nameInputLabel.innerHTML = 'Name: ';\r\n\r\n        let inputblock1 = document.createElement(\"div\");\r\n        inputblock1.appendChild(nameInputLabel);\r\n        inputblock1.appendChild(nameInput);\r\n\r\n        let visitorsInput = document.createElement(\"input\");\r\n        visitorsInput.setAttribute('type', 'number');\r\n        visitorsInput.id = 'visitorsInput';\r\n        let visitorsInputLabel = document.createElement(\"label\");\r\n        visitorsInputLabel.htmlFor = 'visitorseInput';\r\n        visitorsInputLabel.innerHTML = 'Visitors: ';\r\n\r\n        let inputblock2 = document.createElement(\"div\");\r\n\r\n        let submitButton = document.createElement(\"button\");\r\n        submitButton.innerHTML = 'next step';\r\n        submitButton.className = 'p-2 bg-green-500 hover:bg-green-800 hover:text-white w-full';\r\n        \r\n        inputblock1.className = \"mb-5 flex flex-col\";\r\n        inputblock2.className = \"mb-5 flex flex-col\";\r\n\r\n        inputblock2.appendChild(visitorsInputLabel);\r\n        inputblock2.appendChild(visitorsInput);\r\n\r\n        block.appendChild(inputblock1);\r\n        block.appendChild(inputblock2);\r\n        block.appendChild(submitButton);\r\n        \r\n        \r\n    }\r\n\r\n    generateGrid() {\r\n        let paneSize = this.paneSize;\r\n        let windowSize = this.windowSize;\r\n        console.log(paneSize);\r\n        const grid = document.getElementById(\"grid\");\r\n                        grid.style.position = \"relative\";\r\n                        grid.style.width = `${windowSize}px`;\r\n                        grid.style.height = `${windowSize}px`;\r\n                        \r\n        let rows = this.gridSize;\r\n                    let cols = this.gridSize;\r\n                    for(let i = 0; i < rows; i++) {\r\n                        for(let j = 0; j < cols; j++) {\r\n                            addGridPane(j, i);\r\n                        }\r\n                    }\r\n                    function addGridPane(x, y) {\r\n                        const gridPane = document.createElement(\"div\");\r\n                        gridPane.className =  `border gridpane absolute border border-black hover:bg-gray-400 dropzone`;\r\n                        gridPane.id = `x${x}y${y}`;\r\n                        gridPane.style.left = `${x * paneSize}px`;\r\n                        gridPane.style.top = `${y * paneSize}px`;\r\n                        gridPane.style.height = `${paneSize}px`;\r\n                        gridPane.style.width = `${paneSize}px`;\r\n                        gridPane.style.position = \"absolute\";\r\n                        grid.appendChild(gridPane);\r\n                    }\r\n    }\r\n   \r\n    generateImages() {\r\n        let block = document.getElementById(\"images_block\");\r\n        block.className = 'h-full draggable-items';\r\n\r\n        let imageBlock = document.createElement(\"div\");\r\n        imageBlock.className = \"mb-5 flex flex-col\";\r\n        imageBlock.id = \"imageList\"\r\n        imageBlock.setAttribute('draggable', 'true');\r\n        imageBlock.style.width = 50 + \"px\";\r\n        imageBlock.style.height = 50 + \"px\";\r\n\r\n        if(this.mainController.tenten > 0) this.generateImage('tent', imageBlock, 'Tenten', this.mainController.tenten);\r\n        if(this.mainController.drankkramen > 0)this.generateImage('drink', imageBlock, 'Drankkramen', this.mainController.drankkramen);\r\n        if(this.mainController.eetkramen > 0)this.generateImage('food', imageBlock, 'Eetkramen', this.mainController.eetkramen);\r\n        if(this.mainController.toiletten > 0)this.generateImage('toilet', imageBlock, 'Toiletten', this.mainController.toiletten);\r\n        if(this.mainController.bredebomen > 0)this.generateImage('bredeboom', imageBlock, 'Bredebomen', this.mainController.bredebomen);\r\n        if(this.mainController.hogebomen > 0)this.generateImage('hogeboom', imageBlock, 'Hogebomen', this.mainController.hogebomen);\r\n        if(this.mainController.prullenbakken > 0)this.generateImage('prullenbak', imageBlock, 'Prullenbakken', this.mainController.prullenbakken);\r\n        if(this.mainController.schaduwbomen > 0)this.generateImage('schaduwboom', imageBlock, 'Schaduwbomen', this.mainController.schaduwbomen);\r\n\r\n        block.appendChild(imageBlock);\r\n    } \r\n\r\n    generateImage(type, imageBlock, name, amount){\r\n\r\n        var image = document.createElement(\"img\");\r\n        image.src = \"../src/images/\"+ type +\".png\";\r\n        image.id = type;\r\n        image.setAttribute('draggable', 'true');\r\n\r\n        let amountInputLabel = document.createElement(\"label\");\r\n        amountInputLabel.htmlFor = 'amountInput';\r\n        amountInputLabel.innerHTML = name + '=' + amount;\r\n\r\n        let inputblock = document.createElement(\"div\");\r\n        inputblock.appendChild(image);\r\n        inputblock.appendChild(amountInputLabel);\r\n        inputblock.className = \"mb-4 flex flex-col w-full\";\r\n\r\n        imageBlock.appendChild(inputblock);\r\n    }\r\n\r\n    dropEvents(){\r\n        const dropzones = document.querySelector('.dropzones');\r\n\r\n        let el = null;\r\n        let pastCoordinates = null;\r\n        let newNode = null;\r\n\r\n        document\r\n            .querySelector('.draggable-items')\r\n            .addEventListener('dragstart', e => {\r\n            \r\n                el = e.target.cloneNode(true)            \r\n        });\r\n\r\n        dropzones.addEventListener('dragover', (e) => {\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropzones.addEventListener('drop', (e) => {\r\n            e.preventDefault();\r\n\r\n            let coordinates = e.target.id;\r\n\r\n            if(coordinates[0] != 'x'){\r\n                coordinates = e.target.parentNode.id;\r\n            }\r\n\r\n            if(!this.mainController.isGridFilled(coordinates)){\r\n\r\n                e.target.appendChild(el);\r\n\r\n                e.target.addEventListener('dragstart', e => {\r\n            \r\n                    el = e.target.cloneNode(true)            \r\n                    newNode = el;\r\n                });\r\n\r\n                if(el.hasAttribute('draggable')){\r\n                    el.removeAttribute('draggable');\r\n                    pastCoordinates = null;\r\n                }\r\n\r\n                if(pastCoordinates != null){\r\n\r\n                    this.mainController.setGridFill(pastCoordinates, false);\r\n                    let pastImage = document.getElementById(pastCoordinates);\r\n\r\n                    while (pastImage.firstChild) {\r\n                        pastImage.removeChild(pastImage.firstChild);\r\n                      }\r\n                }\r\n\r\n                pastCoordinates = coordinates;\r\n                this.mainController.setGridFill(coordinates, true);\r\n                this.mainController.updateGridImages(el.id);\r\n                let block = document.getElementById(\"imageList\");\r\n                block.remove();\r\n                this.generateImages();\r\n            }\r\n        });\r\n    }\r\n} ","export default class NavigationView {\r\n    constructor() {\r\n\r\n    }\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n        const addLocationButton = document.getElementById('addLocation');\r\n        \r\n        addLocationButton.addEventListener('click', () => {this.addLocation()});\r\n        this.navigationController.refreshNavigation();\r\n\r\n    \r\n       \r\n       \r\n    }\r\n\r\n    test() {\r\n        console.log(navigationController.getData());\r\n    }\r\n    \r\n    \r\n    deleteLocation(i) {\r\n        this.navigationController.deleteLocation(i);\r\n    }\r\n\r\n    addLocation() {\r\n        this.navigationController.addLocation();\r\n    }\r\n\r\n\r\n    refreshNavigation(data) {\r\n        this.generateLocationMenu(data);\r\n    }\r\n\r\n    generateLocationMenu(data) {\r\n        this.clearNavigation();\r\n        const nav = document.getElementById(\"nav\");\r\n        let i =1;\r\n        data.locations.forEach( function(location) {\r\n            let name = 'naam onbekend';\r\n            if(location.name != null) {\r\n                let name = location.name;\r\n            }\r\n            const navItem = document.createElement(\"button\");\r\n            navItem.innerHTML = `Naam`;\r\n            navItem.className = `navbutton bg-gray-200 p-3 pb-2 hover:bg-gray-500 hover:text-white flex flex-row`;\r\n            navItem.id = `location${i}`;\r\n            \r\n            const deleteButton = document.createElement(\"button\");\r\n            deleteButton.id = `deletelocation${i}`;\r\n            deleteButton.className = ` bg-red-500 hover:bg-red-800 hover:text-white ml-4 pr-2 pl-2`;\r\n            deleteButton.innerHTML = `X`;\r\n\r\n            navItem.appendChild(deleteButton);\r\n            nav.appendChild(navItem);\r\n            i++;\r\n        }\r\n        )\r\n        for(let i = 1; i <= data.locations.length; i++) {\r\n            let deletebutton = document.getElementById(`deletelocation${i}`);\r\n            console.log(deletebutton)\r\n            deletebutton.addEventListener('click', () => { this.deleteLocation(i)});\r\n        }   \r\n        \r\n    }\r\n\r\n    clearNavigation() {\r\n        let elements = document.getElementsByClassName('navbutton');\r\n        while(elements.length > 0){\r\n            elements[0].parentNode.removeChild(elements[0]);\r\n        }\r\n    }\r\n}","import Grid from \"../Models/Grid\"\r\n\r\nexport default class MainController {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.mainGrid = new Grid();\r\n\r\n        this.tenten = 3;\r\n        this.eetkramen = 2;\r\n        this.drankkramen = 1;\r\n        this.toiletten = 4;\r\n        this.prullenbakken = 5;\r\n        this.hogebomen = 2;\r\n        this.bredebomen = 3;\r\n        this.schaduwbomen = 1;\r\n    }\r\n\r\n    getData() {\r\n        return data;\r\n    }\r\n\r\n    isGridFilled(coordinates){\r\n\r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n\r\n        return this.mainGrid.array[x][y].getFilled();\r\n    }\r\n\r\n    setGridFill(coordinates, setFill){\r\n\r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n\r\n        this.mainGrid.array[x][y].setFilled(setFill);\r\n    }\r\n\r\n    updateGridImages(type){\r\n        switch(type){\r\n            case \"tent\":\r\n                this.tenten--;\r\n                break;\r\n            case \"drink\":\r\n                this.drankkramen--;\r\n                break;\r\n            case \"food\":\r\n                this.eetkramen--;\r\n                break;\r\n            case \"toilet\":\r\n                this.toiletten--;\r\n                break;\r\n            case \"prullenbak\":\r\n                this.prullenbakken--;\r\n                break;\r\n            case \"hogeboom\":\r\n                this.hogebomen--;\r\n                break;\r\n            case \"bredeboom\":\r\n                this.bredebomen--;\r\n                break;\r\n            case \"schaduwboom\":\r\n                this.schaduwbomen--;\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import Location from \"../Models/location\"\r\n\r\nexport default class NavigationController {\r\n    constructor(navigationView, data) {\r\n        this.data = data;\r\n        this.navigationView = navigationView;\r\n    }\r\n\r\n    addLocation() {\r\n        this.data.addLocation(new Location());\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n\r\n    }\r\n\r\n    deleteLocation(location) {\r\n        this.data.deleteLocation(location);\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n        \r\n    }\r\n\r\n    getData() {\r\n        return this.data;\r\n    }\r\n\r\n    refreshNavigation() {\r\n        this.navigationView.refreshNavigation(this.data);\r\n    }\r\n}","export default class StepController {\r\n    constructor(mainView, data) {\r\n        this.data = data;\r\n        this.mainView = mainView;\r\n    }\r\n\r\n    setStep(loc) {\r\n        let location = this.data.getLocation(loc);\r\n\r\n        console.log(location);\r\n\r\n        if(location.name == null || locations.visitors == null) {\r\n            this.mainView.generateStep(this.data,1, location);\r\n        }\r\n    }\r\n}"],"sourceRoot":""}