{"version":3,"sources":["webpack://webjs/./src/Models/location.js","webpack://webjs/./src/Models/GridBlock.js","webpack://webjs/./src/Models/Grid.js","webpack://webjs/./src/Models/Location.js","webpack://webjs/./src/index.js","webpack://webjs/./src/Models/Data.js","webpack://webjs/./src/Views/MainView.js","webpack://webjs/./src/Views/NavigationView.js","webpack://webjs/./src/Views/GridView.js","webpack://webjs/./src/Controllers/MainController.js","webpack://webjs/./src/Controllers/NavigationController.js","webpack://webjs/./src/Controllers/StepController.js","webpack://webjs/./src/Controllers/GridController.js"],"names":["Location","name","this","amount","visitors","GridBlock","isFilled","fillType","newIsFilled","newFillType","Grid","array","i","j","x","y","type","placeTent","placeDrinkStand","placeFoodStand","placeToilets","placeTrashcans","placeHighTrees","placeWideTrees","placeShadowTrees","deleteTent","deleteDrinkStand","deleteFoodStand","deleteToilets","deleteTrashcans","deleteHighTrees","deleteWideTrees","deleteShadowTrees","getFillType","setFillType","jsonString","localStorage","getItem","dataobject","JSON","parse","console","log","locations","length","currentLocation","location","push","splice","setItem","stringify","mainView","windowSize","gridSize","paneSize","mainController","navigationController","stepController","data","step","generateStep1","block","document","getElementById","className","nameInput","createElement","setAttribute","id","nameInputLabel","htmlFor","innerHTML","inputblock1","appendChild","visitorsInput","visitorsInputLabel","inputblock2","submitButton","navigationView","addEventListener","addLocation","refreshNavigation","getData","deleteLocation","generateLocationMenu","clearNavigation","nav","forEach","navItem","deleteButton","deletebutton","elements","getElementsByClassName","parentNode","removeChild","gridView","gridController","generateGrid","generateImages","dropEvents","grid","style","position","width","height","rows","cols","addGridPane","gridPane","left","top","backgroundColor","imageBlock","tenten","generateImage","drankkramen","eetkramen","toiletten","bredebomen","hogebomen","prullenbakken","schaduwbomen","image","src","amountInputLabel","inputblock","dropzones","querySelector","element","startEvent","e","target","preventDefault","deleteGridFill","insertBefore","firstChild","setGridFill","drawGridItems","stopImmediatePropagation","loc","mainGrid","coordinates","slice","indexOf","getFilled","parseInt","canPlace","alert","placeItem","deleteItem","init"],"mappings":"mBAAe,MAAMA,EACjB,QAAQC,GACJC,KAAKD,KAAOA,EAKhB,oBAAoBE,GAChBD,KAAKE,SAAWA,UCRT,MAAMC,EAEjB,cACIH,KAAKI,UAAW,EAChBJ,KAAKK,SAAW,KAGpB,UAAUC,GACNN,KAAKI,SAAWE,EAGpB,YACI,OAAON,KAAKI,SAGhB,YAAYG,GACRP,KAAKK,SAAWE,EAGpB,cACI,OAAOP,KAAKK,UClBL,MAAMG,EAEjB,cACIR,KAAKS,MAAQ,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzBV,KAAKS,MAAMC,GAAK,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpBX,KAAKS,MAAMC,GAAGC,GAAK,IAAIR,GAKnC,SAASS,EAAEC,EAAGC,GACV,OAAO,EAGX,UAAUF,EAAEC,EAAEC,GACV,OAAQA,GACJ,IAAK,OAAQd,KAAKe,UAAUH,EAAEC,GAAI,MAClC,IAAK,aAAcb,KAAKgB,gBAAgBJ,EAAEC,GAAG,MAC7C,IAAK,YAAab,KAAKiB,eAAeL,EAAEC,GAAG,MAC3C,IAAK,iBAAkBb,KAAKkB,aAAaN,EAAEC,GAAG,MAC9C,IAAK,WAAYb,KAAKmB,eAAeP,EAAEC,GAAG,MAC1C,IAAK,WAAYb,KAAKoB,eAAeR,EAAEC,GAAG,MAC1C,IAAK,WAAYb,KAAKqB,eAAeT,EAAEC,GAAG,MAC1C,IAAK,aAAcb,KAAKsB,iBAAiBV,EAAEC,IAKnD,WAAWD,EAAEC,EAAEC,GACX,OAAQA,GACJ,IAAK,OAAQd,KAAKuB,WAAWX,EAAEC,GAC/B,IAAK,aAAcb,KAAKwB,iBAAiBZ,EAAEC,GAAG,MAC9C,IAAK,YAAab,KAAKyB,gBAAgBb,EAAEC,GAAG,MAC5C,IAAK,iBAAkBb,KAAK0B,cAAcd,EAAEC,GAAG,MAC/C,IAAK,WAAYb,KAAK2B,gBAAgBf,EAAEC,GAAG,MAC3C,IAAK,WAAYb,KAAK4B,gBAAgBhB,EAAEC,GAAG,MAC3C,IAAK,WAAYb,KAAK6B,gBAAgBjB,EAAEC,GAAG,MAC3C,IAAK,aAAcb,KAAK8B,kBAAkBlB,EAAEC,IAKpD,QAAQD,EAAEC,GACN,OAAOb,KAAKS,MAAMG,GAAGC,GAAGkB,cAE5B,UAAUnB,EAAEC,GACRb,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,eACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,eAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,eACjChC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,eAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,eAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,eACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,eAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,eACjChC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,QAGjC,WAAWpB,EAAEC,GACTb,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAGjC,eAAepB,EAAEC,GACbb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,aAGjC,gBAAgBpB,EAAEC,GACdb,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,qBAC/BhC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,cAEjC,aAAapB,EAAEC,GACXb,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,iBAC/BhC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,iBAC/BhC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,eAGjC,eAAepB,EAAEC,GACbb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,YAIjC,eAAepB,EAAEC,GACbb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,YAC7BhC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,mBAGnC,iBAAiBpB,EAAEC,GACfb,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,qBACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,qBAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,qBACjChC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,qBAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,qBAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,qBACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,qBAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,qBACjChC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,cAGjC,eAAgBpB,EAAEC,GACdb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,YAEjC,gBAAgBpB,EAAEC,GACdb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAGjC,iBAAiBpB,EAAEC,GACfb,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAEjC,cAAcpB,EAAEC,GACZb,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAGjC,gBAAgBpB,EAAEC,GACdb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAIjC,gBAAgBpB,EAAEC,GACdb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAC7BhC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,MAGnC,kBAAkBpB,EAAEC,GAChBb,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,GAAGC,EAAE,GAAGmB,YAAY,MAC/BhC,KAAKS,MAAMG,EAAE,GAAGC,EAAE,GAAGmB,YAAY,MACjChC,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,MAGjC,gBAAiBpB,EAAEC,GACfb,KAAKS,MAAMG,GAAGC,GAAGmB,YAAY,OCrJtB,MAAM,EACjB,QAAQjC,GACJC,KAAKD,KAAOA,EAKhB,oBAAoBE,GAChBD,KAAKE,SAAWA,UCGxB,IAAI+B,EAAaC,aAAaC,QAAQ,QAClCC,EAAaC,KAAKC,MAAML,GAC5BM,QAAQC,IAAIJ,GAEZ,MAAM,EAAO,ICbE,MACX,YAAYA,GACLA,EAAWK,UAAUC,QAAU,GAC9B1C,KAAKyC,UAAY,CAAC,IAAI,GACtBzC,KAAK2C,gBAAkB,MAEL,MAAdP,GACJG,QAAQC,IAAI,QACZxC,KAAKyC,UAAYL,EAAWK,UAC5BzC,KAAK2C,gBAAkBP,EAAWO,kBAElC3C,KAAKyC,UAAY,CAAC,IAAI,GACtBzC,KAAK2C,gBAAkB,MAE3BJ,QAAQC,IAAIxC,MAGhB,YAAY4C,GACR5C,KAAKyC,UAAUI,KAAKD,GAExB,eAAeA,GACX5C,KAAKyC,UAAUK,OAAOF,EAAW,EAAE,GAEvC,YAAYA,GACR,OAAO5C,KAAKyC,UAAUG,EAAW,KDXnBR,GAGtBF,aAAaa,QAAQ,OAAQV,KAAKW,UAAU,IAE5C,MAAMC,EAAW,IEpBF,MACX,cACGjD,KAAKkD,WAAa,IAClBlD,KAAKmD,SAAW,GAChBnD,KAAKoD,SAAWpD,KAAKkD,WAAalD,KAAKmD,SAG1C,KAAKE,EAAgBC,EAAsBC,GACvCvD,KAAKqD,eAAiBA,EACtBrD,KAAKsD,qBAAuBA,EAC5BtD,KAAKuD,eAAiBA,EAK1B,aAAaC,EAAMC,EAAMb,GACrB,OAAQa,GACJ,KAAK,EAAGzD,KAAK0D,cAAcF,GAAO,MAClC,KAAK,EAAGjB,QAAQC,IAAI,UAAW,MAC/B,QAASD,QAAQC,IAAIiB,EAAO,6BAIpC,cAAcD,GACV,IAAIG,EAAQC,SAASC,eAAe,uBACpCF,EAAMG,UAAY,SAClB,IAAIC,EAAYH,SAASI,cAAc,SACvCD,EAAUE,aAAa,OAAQ,QAC/BF,EAAUG,GAAK,YACf,IAAIC,EAAiBP,SAASI,cAAc,SAC5CG,EAAeC,QAAU,YACzBD,EAAeE,UAAY,SAE3B,IAAIC,EAAcV,SAASI,cAAc,OACzCM,EAAYC,YAAYJ,GACxBG,EAAYC,YAAYR,GAExB,IAAIS,EAAgBZ,SAASI,cAAc,SAC3CQ,EAAcP,aAAa,OAAQ,UACnCO,EAAcN,GAAK,gBACnB,IAAIO,EAAqBb,SAASI,cAAc,SAChDS,EAAmBL,QAAU,iBAC7BK,EAAmBJ,UAAY,aAE/B,IAAIK,EAAcd,SAASI,cAAc,OAErCW,EAAef,SAASI,cAAc,UAC1CW,EAAaN,UAAY,YACzBM,EAAab,UAAY,8DAEzBQ,EAAYR,UAAY,qBACxBY,EAAYZ,UAAY,qBAExBY,EAAYH,YAAYE,GACxBC,EAAYH,YAAYC,GAExBb,EAAMY,YAAYD,GAClBX,EAAMY,YAAYG,GAClBf,EAAMY,YAAYI,KFrCpBC,EAAiB,IGrBR,MACX,eAGA,KAAKvB,EAAgBC,EAAsBC,GACvCvD,KAAKqD,eAAiBA,EACtBrD,KAAKsD,qBAAuBA,EAC5BtD,KAAKuD,eAAiBA,EACIK,SAASC,eAAe,eAEhCgB,iBAAiB,SAAS,KAAO7E,KAAK8E,iBACxD9E,KAAKsD,qBAAqByB,oBAO9B,OACIxC,QAAQC,IAAIc,qBAAqB0B,WAIrC,eAAetE,GACXV,KAAKsD,qBAAqB2B,eAAevE,GAG7C,cACIV,KAAKsD,qBAAqBwB,cAI9B,kBAAkBtB,GACdxD,KAAKkF,qBAAqB1B,GAG9B,qBAAqBA,GACjBxD,KAAKmF,kBACL,MAAMC,EAAMxB,SAASC,eAAe,OACpC,IAAInD,EAAG,EACP8C,EAAKf,UAAU4C,SAAS,SAASzC,GAET,MAAjBA,EAAS7C,MACG6C,EAAS7C,KAExB,MAAMuF,EAAU1B,SAASI,cAAc,UACvCsB,EAAQjB,UAAY,OACpBiB,EAAQxB,UAAY,kFACpBwB,EAAQpB,GAAK,WAAWxD,IAExB,MAAM6E,EAAe3B,SAASI,cAAc,UAC5CuB,EAAarB,GAAK,iBAAiBxD,IACnC6E,EAAazB,UAAY,+DACzByB,EAAalB,UAAY,IAEzBiB,EAAQf,YAAYgB,GACpBH,EAAIb,YAAYe,GAChB5E,OAGJ,IAAI,IAAIA,EAAI,EAAGA,GAAK8C,EAAKf,UAAUC,OAAQhC,IAAK,CAC5C,IAAI8E,EAAe5B,SAASC,eAAe,iBAAiBnD,KAC5D6B,QAAQC,IAAIgD,GACZA,EAAaX,iBAAiB,SAAS,KAAQ7E,KAAKiF,eAAevE,OAK3E,kBACI,IAAI+E,EAAW7B,SAAS8B,uBAAuB,aAC/C,KAAMD,EAAS/C,OAAS,GACpB+C,EAAS,GAAGE,WAAWC,YAAYH,EAAS,MHjDlDI,EAAW,IItBF,MAEX,cACI7F,KAAKkD,WAAa,IAClBlD,KAAKmD,SAAW,GAChBnD,KAAKoD,SAAWpD,KAAKkD,WAAalD,KAAKmD,SAG3C,KAAK2C,GACD9F,KAAK8F,eAAkBA,EACvB9F,KAAK+F,eACL/F,KAAKgG,iBACLhG,KAAKiG,aAIT,eACI,IAAI7C,EAAWpD,KAAKoD,SAChBF,EAAalD,KAAKkD,WACtBX,QAAQC,IAAIY,GACZ,MAAM8C,EAAOtC,SAASC,eAAe,QACrBqC,EAAKC,MAAMC,SAAW,WACtBF,EAAKC,MAAME,MAAQ,GAAGnD,MACtBgD,EAAKC,MAAMG,OAAS,GAAGpD,MAEvC,IAAIqD,EAAOvG,KAAKmD,SACAqD,EAAOxG,KAAKmD,SAChB,IAAI,IAAIzC,EAAI,EAAGA,EAAI6F,EAAM7F,IACrB,IAAI,IAAIC,EAAI,EAAGA,EAAI6F,EAAM7F,IACrB8F,EAAY9F,EAAGD,GAGvB,SAAS+F,EAAY7F,EAAGC,GACpB,MAAM6F,EAAW9C,SAASI,cAAc,OACxC0C,EAAS5C,UAAa,6EACtB4C,EAASxC,GAAK,IAAItD,KAAKC,IACvB6F,EAASP,MAAMQ,KAAU/F,EAAIwC,EAAP,KACtBsD,EAASP,MAAMS,IAAS/F,EAAIuC,EAAP,KACrBsD,EAASP,MAAMG,OAAS,GAAGlD,MAC3BsD,EAASP,MAAME,MAAQ,GAAGjD,MAC1BsD,EAASP,MAAMC,SAAW,WAC1BF,EAAK3B,YAAYmC,IAIrC,gBACI,IAAI,IAAI9F,EAAI,EAAGA,EAAIZ,KAAKmD,SAAUvC,IAC9B,IAAI,IAAIC,EAAI,EAAGA,EAAIb,KAAKmD,SAAUtC,IAAK,CACnC,IAAIC,EAAOd,KAAK8F,eAAe3D,QAAQvB,EAAEC,GACzC0B,QAAQC,IAAI1B,GACZ8C,SAASC,eAAe,IAAMjD,EAAI,IAAMC,GAAGsF,MAAMU,gBAAkB,QACxD,eAAR/F,EACC8C,SAASC,eAAe,IAAMjD,EAAI,IAAMC,GAAGsF,MAAMU,gBAAkB,SACtD,qBAAP/F,EACN8C,SAASC,eAAe,IAAMjD,EAAI,IAAMC,GAAGsF,MAAMU,gBAAkB,MACtD,iBAAP/F,EACN8C,SAASC,eAAe,IAAMjD,EAAI,IAAMC,GAAGsF,MAAMU,gBAAkB,OACtD,mBAAP/F,GAAmC,mBAAPA,GAAoC,qBAARA,IAC9D8C,SAASC,eAAe,IAAMjD,EAAI,IAAMC,GAAGsF,MAAMU,gBAAkB,UAMnF,iBACI,IAAIlD,EAAQC,SAASC,eAAe,gBACpCF,EAAMG,UAAY,yBAElB,IAAIgD,EAAalD,SAASI,cAAc,OACxC8C,EAAWhD,UAAY,qBACvBgD,EAAW5C,GAAK,YAChB4C,EAAW7C,aAAa,YAAa,QACrC6C,EAAWX,MAAME,MAAQ,OACzBS,EAAWX,MAAMG,OAAS,OAEvBtG,KAAK8F,eAAeiB,OAAS,GAAG/G,KAAKgH,cAAc,OAAQF,EAAY,SAAU9G,KAAK8F,eAAeiB,QACrG/G,KAAK8F,eAAemB,YAAc,GAAEjH,KAAKgH,cAAc,aAAcF,EAAY,cAAe9G,KAAK8F,eAAemB,aACpHjH,KAAK8F,eAAeoB,UAAY,GAAElH,KAAKgH,cAAc,YAAaF,EAAY,YAAa9G,KAAK8F,eAAeoB,WAC/GlH,KAAK8F,eAAeqB,UAAY,GAAEnH,KAAKgH,cAAc,iBAAkBF,EAAY,YAAa9G,KAAK8F,eAAeqB,WACpHnH,KAAK8F,eAAesB,WAAa,GAAEpH,KAAKgH,cAAc,WAAYF,EAAY,aAAc9G,KAAK8F,eAAesB,YAChHpH,KAAK8F,eAAeuB,UAAY,GAAErH,KAAKgH,cAAc,WAAYF,EAAY,YAAa9G,KAAK8F,eAAeuB,WAC9GrH,KAAK8F,eAAewB,cAAgB,GAAEtH,KAAKgH,cAAc,WAAYF,EAAY,gBAAiB9G,KAAK8F,eAAewB,eACtHtH,KAAK8F,eAAeyB,aAAe,GAAEvH,KAAKgH,cAAc,aAAcF,EAAY,eAAgB9G,KAAK8F,eAAeyB,cAEzH5D,EAAMY,YAAYuC,GAGtB,cAAchG,EAAMgG,EAAY/G,EAAME,GAElC,IAAIuH,EAAQ5D,SAASI,cAAc,OACnCwD,EAAMC,IAAM,iBAAkB3G,EAAM,OACpC0G,EAAMtD,GAAKpD,EACX0G,EAAMvD,aAAa,YAAa,QAEhC,IAAIyD,EAAmB9D,SAASI,cAAc,SAC9C0D,EAAiBtD,QAAU,cAC3BsD,EAAiBrD,UAAYtE,EAAO,IAAME,EAE1C,IAAI0H,EAAa/D,SAASI,cAAc,OACxC2D,EAAWpD,YAAYiD,GACvBG,EAAWpD,YAAYmD,GACvBC,EAAW7D,UAAY,4BAEvBgD,EAAWvC,YAAYoD,GAG3B,aACI,MAAMC,EAAYhE,SAASiE,cAAc,cAEzC,IAAIC,EAAU,KAEd,SAASC,EAAWC,GAChBF,EAAUE,EAAEC,OAEhBrE,SACKiE,cAAc,oBACdhD,iBAAiB,YAAakD,GAAY,GAE/CH,EAAU/C,iBAAiB,YAAamD,IACpCA,EAAEE,oBAINN,EAAU/C,iBAAiB,QAASmD,IAEhCA,EAAEE,iBAC8B,IAAzBJ,EAAQnC,WAAWzB,IACtBlE,KAAK8F,eAAeqC,eAAeL,EAAQnC,WAAWzB,GAAG4D,EAAQ5D,IAEjE8D,EAAEC,OAAOG,aAAaN,EAAQE,EAAEC,OAAOI,YAEvCrI,KAAK8F,eAAewC,YAAYN,EAAEC,OAAO/D,GAAI4D,EAAQ5D,IAGrD4D,EAAQjD,iBAAiB,YAAakD,GACtC/H,KAAKuI,gBACTP,EAAEQ,gCJhHRnF,EAAiB,IKtBR,MACX,YAAYG,GACRxD,KAAKwD,KAAOA,ILoBsBP,EAAS,GAC7C,EAAuB,IMvBd,MACX,YAAY2B,EAAgBpB,GACxBxD,KAAKwD,KAAOA,EACZxD,KAAK4E,eAAiBA,EAG1B,cACI5E,KAAKwD,KAAKsB,YAAY,IAAIhF,GAC1BoC,aAAaa,QAAQ,OAAQV,KAAKW,UAAUhD,KAAKwD,OAEjDxD,KAAK4E,eAAeG,kBAAkB/E,KAAKwD,MAI/C,eAAeZ,GACX5C,KAAKwD,KAAKyB,eAAerC,GACzBV,aAAaa,QAAQ,OAAQV,KAAKW,UAAUhD,KAAKwD,OAEjDxD,KAAK4E,eAAeG,kBAAkB/E,KAAKwD,MAI/C,UACI,OAAOxD,KAAKwD,KAGhB,oBACIxD,KAAK4E,eAAeG,kBAAkB/E,KAAKwD,QNJGoB,EAAe,GAC/DrB,EAAiB,IO1BR,MACX,YAAYN,EAAUO,GAClBxD,KAAKwD,KAAOA,EACZxD,KAAKiD,SAAWA,EAGpB,QAAQwF,MPoB8BxF,EAAS,GAC7C6C,EAAiB,IQzBR,MACX,YAAYtC,GACRxD,KAAKwD,KAAOA,EACZxD,KAAK0I,SAAW,IAAIlI,EAEpBR,KAAK+G,OAAS,EACd/G,KAAKkH,UAAY,EACjBlH,KAAKiH,YAAc,EACnBjH,KAAKmH,UAAY,EACjBnH,KAAKsH,cAAgB,EACrBtH,KAAKqH,UAAY,EACjBrH,KAAKoH,WAAa,EAClBpH,KAAKuH,aAAe,EAGxB,UACI,OAAO/D,KAGX,aAAamF,GAET,IAAI/H,EAAI+H,EAAYC,MAAMD,EAAYE,QAAQ,KAAO,EAAGF,EAAYE,QAAQ,MACxEhI,EAAI8H,EAAYC,MAAMD,EAAYE,QAAQ,KAAO,EAAGF,EAAYjG,QAEpE,OAAO1C,KAAK0I,SAASjI,MAAMG,GAAGC,GAAGiI,YAGrC,YAAYH,EAAa7H,GAErB,IAAIF,EAAI+H,EAAYC,MAAMD,EAAYE,QAAQ,KAAO,EAAGF,EAAYE,QAAQ,MACxEhI,EAAI8H,EAAYC,MAAMD,EAAYE,QAAQ,KAAO,EAAGF,EAAYjG,QACpE9B,EAAImI,SAASnI,GACbC,EAAIkI,SAASlI,GAEEb,KAAK0I,SAASM,SAASpI,EAAEC,EAAEC,GAEtCmI,MAAM,wCAGVjJ,KAAK0I,SAASQ,UAAUtI,EAAEC,EAAEC,GAGhC,eAAe6H,EAAa7H,GACxB,IAAIF,EAAI+H,EAAYC,MAAMD,EAAYE,QAAQ,KAAO,EAAGF,EAAYE,QAAQ,MACxEhI,EAAI8H,EAAYC,MAAMD,EAAYE,QAAQ,KAAO,EAAGF,EAAYjG,QACpE9B,EAAImI,SAASnI,GACbC,EAAIkI,SAASlI,GAGbb,KAAK0I,SAASS,WAAWvI,EAAEC,EAAEC,GAEjC,QAAQF,EAAEC,GACN,OAAOb,KAAK0I,SAASvG,QAAQvB,EAAEC,GAGnC,iBAAiBC,GACb,OAAOA,GACH,IAAK,OACDd,KAAK+G,SACL,MACJ,IAAK,QACD/G,KAAKiH,cACL,MACJ,IAAK,OACDjH,KAAKkH,YACL,MACJ,IAAK,SACDlH,KAAKmH,YACL,MACJ,IAAK,aACDnH,KAAKsH,gBACL,MACJ,IAAK,WACDtH,KAAKqH,YACL,MACJ,IAAK,YACDrH,KAAKoH,aACL,MACJ,IAAK,cACDpH,KAAKuH,kBRtDqB1B,EAAU,GAEpD5C,EAASmG,KAAK/F,EAAgB,EAAsBE,GACpDqB,EAAewE,KAAK/F,EAAgB,EAAsBE,GAC1DsC,EAASuD,KAAKtD,I","file":"main.js","sourcesContent":["export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n        \r\n        \r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","export default class GridBlock {\r\n    \r\n    constructor() {\r\n        this.isFilled = false;\r\n        this.fillType = null;\r\n    }\r\n\r\n    setFilled(newIsFilled) {\r\n        this.isFilled = newIsFilled;\r\n    }\r\n\r\n    getFilled() {\r\n        return this.isFilled;\r\n    }\r\n\r\n    setFillType(newFillType) {\r\n        this.fillType = newFillType;\r\n    }\r\n\r\n    getFillType() {\r\n        return this.fillType;\r\n    }\r\n}","import GridBlock from \"../Models/GridBlock\";\r\n\r\nexport default class Grid {\r\n    \r\n    constructor() {\r\n        this.array = [];\r\n        for (var i = 0; i < 15; i++) {\r\n            this.array[i] = [];\r\n            for (var j = 0; j < 15; j++) {\r\n                this.array[i][j] = new GridBlock();\r\n            }\r\n        }\r\n    }\r\n\r\n    canPlace(x,y, type) {\r\n        return false;\r\n    }\r\n\r\n    placeItem(x,y,type) {\r\n        switch (type) {\r\n            case \"tent\": this.placeTent(x,y); break;\r\n            case \"drinkStand\": this.placeDrinkStand(x,y);break;\r\n            case \"foodStand\": this.placeFoodStand(x,y);break;\r\n            case \"toiletBuilding\": this.placeToilets(x,y);break;\r\n            case \"trashcan\": this.placeTrashcans(x,y);break;\r\n            case \"highTree\": this.placeHighTrees(x,y);break;\r\n            case \"wideTree\": this.placeWideTrees(x,y);break;\r\n            case \"shadowTree\": this.placeShadowTrees(x,y);break;\r\n        }\r\n\r\n        \r\n    }\r\n    deleteItem(x,y,type) {\r\n        switch (type) {\r\n            case \"tent\": this.deleteTent(x,y);\r\n            case \"drinkStand\": this.deleteDrinkStand(x,y);break;\r\n            case \"foodStand\": this.deleteFoodStand(x,y);break;\r\n            case \"toiletBuilding\": this.deleteToilets(x,y);break;\r\n            case \"trashcan\": this.deleteTrashcans(x,y);break;\r\n            case \"highTree\": this.deleteHighTrees(x,y);break;\r\n            case \"wideTree\": this.deleteWideTrees(x,y);break;\r\n            case \"shadowTree\": this.deleteShadowTrees(x,y);break;\r\n            \r\n        }\r\n    }\r\n\r\n    getItem(x,y) {\r\n        return this.array[x][y].getFillType();\r\n    }\r\n    placeTent(x,y) {\r\n        this.array[x-1][y-1].setFillType(\"tentSurface\");\r\n        this.array[x][y-1].setFillType(\"tentSurface\");\r\n        this.array[x+1][y-1].setFillType(\"tentSurface\");\r\n        this.array[x-1][y].setFillType(\"tentSurface\");\r\n        this.array[x+1][y].setFillType(\"tentSurface\");\r\n        this.array[x-1][y+1].setFillType(\"tentSurface\");\r\n        this.array[x][y+1].setFillType(\"tentSurface\");\r\n        this.array[x+1][y+1].setFillType(\"tentSurface\");\r\n        this.array[x][y].setFillType(\"tent\");\r\n    }\r\n\r\n    deleteTent(x,y) {\r\n        this.array[x-1][y-1].setFillType(null);\r\n        this.array[x][y-1].setFillType(null);\r\n        this.array[x+1][y-1].setFillType(null);\r\n        this.array[x-1][y].setFillType(null);\r\n        this.array[x+1][y].setFillType(null);\r\n        this.array[x-1][y+1].setFillType(null);\r\n        this.array[x][y+1].setFillType(null);\r\n        this.array[x+1][y+1].setFillType(null);\r\n        this.array[x][y].setFillType(null);\r\n    }\r\n\r\n    placeFoodStand(x,y) {\r\n        this.array[x][y].setFillType(\"foodStand\");\r\n    }\r\n\r\n    placeDrinkStand(x,y) {\r\n        this.array[x][y-1].setFillType(\"drinkStandSurface\");\r\n        this.array[x][y].setFillType(\"drinkStand\");\r\n    }\r\n    placeToilets(x,y) {\r\n        this.array[x][y-1].setFillType(\"toiletSurface\");\r\n        this.array[x][y+1].setFillType(\"toiletSurface\");\r\n        this.array[x][y].setFillType(\"toiletStand\");\r\n    }\r\n\r\n    placeHighTrees(x,y) {\r\n        this.array[x][y].setFillType(\"highTree\");\r\n        \r\n    }\r\n\r\n    placeWideTrees(x,y) {\r\n        this.array[x][y].setFillType(\"wideTree\");\r\n        this.array[x+1][y].setFillType(\"wideTreeSurface\");\r\n        \r\n    }\r\n    placeShadowTrees(x,y) {\r\n        this.array[x-1][y-1].setFillType(\"shadowTreeSurface\");\r\n        this.array[x][y-1].setFillType(\"shadowTreeSurface\");\r\n        this.array[x+1][y-1].setFillType(\"shadowTreeSurface\");\r\n        this.array[x-1][y].setFillType(\"shadowTreeSurface\");\r\n        this.array[x+1][y].setFillType(\"shadowTreeSurface\");\r\n        this.array[x-1][y+1].setFillType(\"shadowTreeSurface\");\r\n        this.array[x][y+1].setFillType(\"shadowTreeSurface\");\r\n        this.array[x+1][y+1].setFillType(\"shadowTreeSurface\");\r\n        this.array[x][y].setFillType(\"shadowTree\");\r\n    }\r\n\r\n    placeTrashcans( x,y) {\r\n        this.array[x][y].setFillType(\"trashcan\");\r\n    }\r\n    deleteFoodStand(x,y) {\r\n        this.array[x][y].setFillType(null);\r\n    }\r\n\r\n    deleteDrinkStand(x,y) {\r\n        this.array[x][y-1].setFillType(null);\r\n        this.array[x][y].setFillType(null);\r\n    }\r\n    deleteToilets(x,y) {\r\n        this.array[x][y-1].setFillType(null);\r\n        this.array[x][y+1].setFillType(null);\r\n        this.array[x][y].setFillType(null);\r\n    }\r\n\r\n    deleteHighTrees(x,y) {\r\n        this.array[x][y].setFillType(null);\r\n        \r\n    }\r\n\r\n    deleteWideTrees(x,y) {\r\n        this.array[x][y].setFillType(null);\r\n        this.array[x+1][y].setFillType(null);\r\n        \r\n    }\r\n    deleteShadowTrees(x,y) {\r\n        this.array[x-1][y-1].setFillType(null);\r\n        this.array[x][y-1].setFillType(null);\r\n        this.array[x+1][y-1].setFillType(null);\r\n        this.array[x-1][y].setFillType(null);\r\n        this.array[x+1][y].setFillType(null);\r\n        this.array[x-1][y+1].setFillType(null);\r\n        this.array[x][y+1].setFillType(null);\r\n        this.array[x+1][y+1].setFillType(null);\r\n        this.array[x][y].setFillType(null);\r\n    }\r\n\r\n    deleteTrashcans( x,y) {\r\n        this.array[x][y].setFillType(null);\r\n    }\r\n    \r\n    \r\n\r\n\r\n}","export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n        \r\n        \r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","import MainController from './Controllers/MainController.js'\r\nimport NavigationController from './Controllers/NavigationController.js'\r\nimport StepController from './Controllers/StepController.js'\r\nimport GridController from './Controllers/GridController.js'\r\n\r\nimport MainView from './Views/MainView.js'\r\nimport NavigationView from './Views/NavigationView.js'\r\nimport GridView from './Views/GridView.js'\r\n\r\nimport Data from './Models/Data.js'\r\n\r\nlet jsonString = localStorage.getItem('data');\r\nlet dataobject = JSON.parse(jsonString);\r\nconsole.log(dataobject);\r\n\r\nconst data = new Data(dataobject);\r\n\r\n\r\nlocalStorage.setItem('data', JSON.stringify(data));\r\n\r\nconst mainView = new MainView();\r\nconst navigationView = new NavigationView();\r\nconst gridView = new GridView();\r\n\r\nconst mainController = new MainController(mainView,data);\r\nconst navigationController = new NavigationController(navigationView,data);\r\nconst stepController = new StepController(mainView,data);\r\nconst gridController = new GridController(gridView, data);\r\n\r\nmainView.init(mainController, navigationController, stepController);\r\nnavigationView.init(mainController, navigationController, stepController);\r\ngridView.init(gridController);\r\n\r\n\r\n\r\n","import Location from \"./Location\"\r\n\r\nexport default class Data {\r\n    constructor(dataobject) {\r\n        if(dataobject.locations.length <= 0) {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        else if(dataobject != null) {\r\n            console.log(\"hier\");\r\n            this.locations = dataobject.locations;\r\n            this.currentLocation = dataobject.currentLocation;\r\n        } else {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        console.log(this)\r\n    }\r\n\r\n    addLocation(location) {\r\n        this.locations.push(location);\r\n    }\r\n    deleteLocation(location) {\r\n        this.locations.splice(location - 1,1)\r\n    }\r\n    getLocation(location) {\r\n        return this.locations[location - 1];\r\n    }\r\n}","export default class MainView {\r\n    constructor() {\r\n       this.windowSize = 750;\r\n       this.gridSize = 15;\r\n       this.paneSize = this.windowSize / this.gridSize;\r\n    }\r\n\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n\r\n    \r\n    }\r\n\r\n    generateStep(data, step, location) {\r\n        switch (step) {\r\n            case 1: this.generateStep1(data); break;\r\n            case 2: console.log(\"stap 2\"); break;\r\n            default: console.log(step + \"default zou niet moeten!\"); break;\r\n        }\r\n    }\r\n\r\n    generateStep1(data) {\r\n        let block = document.getElementById(\"configuration_block\");\r\n        block.className = 'h-full';\r\n        let nameInput = document.createElement(\"input\");\r\n        nameInput.setAttribute('type', 'text');\r\n        nameInput.id = 'nameInput';\r\n        let nameInputLabel = document.createElement(\"label\");\r\n        nameInputLabel.htmlFor = 'nameInput';\r\n        nameInputLabel.innerHTML = 'Name: ';\r\n\r\n        let inputblock1 = document.createElement(\"div\");\r\n        inputblock1.appendChild(nameInputLabel);\r\n        inputblock1.appendChild(nameInput);\r\n\r\n        let visitorsInput = document.createElement(\"input\");\r\n        visitorsInput.setAttribute('type', 'number');\r\n        visitorsInput.id = 'visitorsInput';\r\n        let visitorsInputLabel = document.createElement(\"label\");\r\n        visitorsInputLabel.htmlFor = 'visitorseInput';\r\n        visitorsInputLabel.innerHTML = 'Visitors: ';\r\n\r\n        let inputblock2 = document.createElement(\"div\");\r\n\r\n        let submitButton = document.createElement(\"button\");\r\n        submitButton.innerHTML = 'next step';\r\n        submitButton.className = 'p-2 bg-green-500 hover:bg-green-800 hover:text-white w-full';\r\n        \r\n        inputblock1.className = \"mb-5 flex flex-col\";\r\n        inputblock2.className = \"mb-5 flex flex-col\";\r\n\r\n        inputblock2.appendChild(visitorsInputLabel);\r\n        inputblock2.appendChild(visitorsInput);\r\n\r\n        block.appendChild(inputblock1);\r\n        block.appendChild(inputblock2);\r\n        block.appendChild(submitButton);\r\n        \r\n        \r\n    }\r\n\r\n    \r\n} ","export default class NavigationView {\r\n    constructor() {\r\n\r\n    }\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n        const addLocationButton = document.getElementById('addLocation');\r\n        \r\n        addLocationButton.addEventListener('click', () => {this.addLocation()});\r\n        this.navigationController.refreshNavigation();\r\n\r\n    \r\n       \r\n       \r\n    }\r\n\r\n    test() {\r\n        console.log(navigationController.getData());\r\n    }\r\n    \r\n    \r\n    deleteLocation(i) {\r\n        this.navigationController.deleteLocation(i);\r\n    }\r\n\r\n    addLocation() {\r\n        this.navigationController.addLocation();\r\n    }\r\n\r\n\r\n    refreshNavigation(data) {\r\n        this.generateLocationMenu(data);\r\n    }\r\n\r\n    generateLocationMenu(data) {\r\n        this.clearNavigation();\r\n        const nav = document.getElementById(\"nav\");\r\n        let i =1;\r\n        data.locations.forEach( function(location) {\r\n            let name = 'naam onbekend';\r\n            if(location.name != null) {\r\n                let name = location.name;\r\n            }\r\n            const navItem = document.createElement(\"button\");\r\n            navItem.innerHTML = `Naam`;\r\n            navItem.className = `navbutton bg-gray-200 p-3 pb-2 hover:bg-gray-500 hover:text-white flex flex-row`;\r\n            navItem.id = `location${i}`;\r\n            \r\n            const deleteButton = document.createElement(\"button\");\r\n            deleteButton.id = `deletelocation${i}`;\r\n            deleteButton.className = ` bg-red-500 hover:bg-red-800 hover:text-white ml-4 pr-2 pl-2`;\r\n            deleteButton.innerHTML = `X`;\r\n\r\n            navItem.appendChild(deleteButton);\r\n            nav.appendChild(navItem);\r\n            i++;\r\n        }\r\n        )\r\n        for(let i = 1; i <= data.locations.length; i++) {\r\n            let deletebutton = document.getElementById(`deletelocation${i}`);\r\n            console.log(deletebutton)\r\n            deletebutton.addEventListener('click', () => { this.deleteLocation(i)});\r\n        }   \r\n        \r\n    }\r\n\r\n    clearNavigation() {\r\n        let elements = document.getElementsByClassName('navbutton');\r\n        while(elements.length > 0){\r\n            elements[0].parentNode.removeChild(elements[0]);\r\n        }\r\n    }\r\n}","export default class GridView {\r\n    \r\n    constructor() {\r\n        this.windowSize = 750;\r\n        this.gridSize = 15;\r\n        this.paneSize = this.windowSize / this.gridSize;\r\n     }\r\n\r\n    init(gridController) {\r\n        this.gridController =  gridController;\r\n        this.generateGrid();\r\n        this.generateImages();\r\n        this.dropEvents();\r\n    }\r\n\r\n\r\n    generateGrid() {\r\n        let paneSize = this.paneSize;\r\n        let windowSize = this.windowSize;\r\n        console.log(paneSize);\r\n        const grid = document.getElementById(\"grid\");\r\n                        grid.style.position = \"relative\";\r\n                        grid.style.width = `${windowSize}px`;\r\n                        grid.style.height = `${windowSize}px`;\r\n                        \r\n        let rows = this.gridSize;\r\n                    let cols = this.gridSize;\r\n                    for(let i = 0; i < rows; i++) {\r\n                        for(let j = 0; j < cols; j++) {\r\n                            addGridPane(j, i);\r\n                        }\r\n                    }\r\n                    function addGridPane(x, y) {\r\n                        const gridPane = document.createElement(\"div\");\r\n                        gridPane.className =  `border gridpane absolute border border-gray-100 hover:bg-gray-400 dropzone`;\r\n                        gridPane.id = `x${x}y${y}`;\r\n                        gridPane.style.left = `${x * paneSize}px`;\r\n                        gridPane.style.top = `${y * paneSize}px`;\r\n                        gridPane.style.height = `${paneSize}px`;\r\n                        gridPane.style.width = `${paneSize}px`;\r\n                        gridPane.style.position = \"absolute\";\r\n                        grid.appendChild(gridPane);\r\n                    }\r\n    }\r\n\r\n    drawGridItems() {\r\n        for(let x = 0; x < this.gridSize; x++) {\r\n            for(let y = 0; y < this.gridSize; y++) {\r\n                let type = this.gridController.getItem(x,y);\r\n                console.log(type);\r\n                document.getElementById('x' + x + 'y' + y).style.backgroundColor = \"white\";\r\n                if(type == \"tentSurface\") {\r\n                    document.getElementById('x' + x + 'y' + y).style.backgroundColor = \"yellow\";\r\n                } else if(type ==\"drinkStandSurface\") {\r\n                    document.getElementById('x' + x + 'y' + y).style.backgroundColor = \"red\";\r\n                } else if(type ==\"toiletSurface\") {\r\n                    document.getElementById('x' + x + 'y' + y).style.backgroundColor = \"grey\";\r\n                } else if(type ==\"highTreeSurface\" || type ==\"wideTreeSurface\" || type == \"shadowTreeSurface\") {\r\n                    document.getElementById('x' + x + 'y' + y).style.backgroundColor = \"green\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n   \r\n    generateImages() {\r\n        let block = document.getElementById(\"images_block\");\r\n        block.className = 'h-full draggable-items';\r\n\r\n        let imageBlock = document.createElement(\"div\");\r\n        imageBlock.className = \"mb-5 flex flex-col\";\r\n        imageBlock.id = \"imageList\"\r\n        imageBlock.setAttribute('draggable', 'true');\r\n        imageBlock.style.width = 50 + \"px\";\r\n        imageBlock.style.height = 50 + \"px\";\r\n\r\n        if(this.gridController.tenten > 0) this.generateImage('tent', imageBlock, 'Tenten', this.gridController.tenten);\r\n        if(this.gridController.drankkramen > 0)this.generateImage('drinkStand', imageBlock, 'Drankkramen', this.gridController.drankkramen);\r\n        if(this.gridController.eetkramen > 0)this.generateImage('foodStand', imageBlock, 'Eetkramen', this.gridController.eetkramen);\r\n        if(this.gridController.toiletten > 0)this.generateImage('toiletBuilding', imageBlock, 'Toiletten', this.gridController.toiletten);\r\n        if(this.gridController.bredebomen > 0)this.generateImage('wideTree', imageBlock, 'Bredebomen', this.gridController.bredebomen);\r\n        if(this.gridController.hogebomen > 0)this.generateImage('highTree', imageBlock, 'Hogebomen', this.gridController.hogebomen);\r\n        if(this.gridController.prullenbakken > 0)this.generateImage('trashcan', imageBlock, 'Prullenbakken', this.gridController.prullenbakken);\r\n        if(this.gridController.schaduwbomen > 0)this.generateImage('shadowTree', imageBlock, 'Schaduwbomen', this.gridController.schaduwbomen);\r\n\r\n        block.appendChild(imageBlock);\r\n    } \r\n\r\n    generateImage(type, imageBlock, name, amount){\r\n\r\n        var image = document.createElement(\"img\");\r\n        image.src = \"../src/images/\"+ type +\".png\";\r\n        image.id = type;\r\n        image.setAttribute('draggable', 'true');\r\n\r\n        let amountInputLabel = document.createElement(\"label\");\r\n        amountInputLabel.htmlFor = 'amountInput';\r\n        amountInputLabel.innerHTML = name + '=' + amount;\r\n\r\n        let inputblock = document.createElement(\"div\");\r\n        inputblock.appendChild(image);\r\n        inputblock.appendChild(amountInputLabel);\r\n        inputblock.className = \"mb-4 flex flex-col w-full\";\r\n\r\n        imageBlock.appendChild(inputblock);\r\n    }\r\n\r\n    dropEvents(){\r\n        const dropzones = document.querySelector('.dropzones');\r\n\r\n        let element = null;\r\n        let event = null;\r\n        function startEvent(e) {\r\n            element = e.target;\r\n        }\r\n        document\r\n            .querySelector('.draggable-items')\r\n            .addEventListener('dragstart', startEvent, false);\r\n\r\n        dropzones.addEventListener('dragover', (e) => {\r\n            e.preventDefault();\r\n            \r\n        }); \r\n\r\n        dropzones.addEventListener('drop', (e) => {\r\n            \r\n            e.preventDefault();\r\n                if(element.parentNode.id != \"\"){\r\n                this.gridController.deleteGridFill(element.parentNode.id,element.id);\r\n                }\r\n                e.target.insertBefore(element,e.target.firstChild);\r\n                \r\n                this.gridController.setGridFill(e.target.id, element.id);\r\n                \r\n\r\n                element.addEventListener('dragstart', startEvent);\r\n                this.drawGridItems();\r\n            e.stopImmediatePropagation()\r\n            \r\n        });       \r\n\r\n        \r\n    }\r\n}","import Grid from \"../Models/Grid\"\r\n\r\nexport default class MainController {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n}\r\n","import Location from \"../Models/location\"\r\n\r\nexport default class NavigationController {\r\n    constructor(navigationView, data) {\r\n        this.data = data;\r\n        this.navigationView = navigationView;\r\n    }\r\n\r\n    addLocation() {\r\n        this.data.addLocation(new Location());\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n\r\n    }\r\n\r\n    deleteLocation(location) {\r\n        this.data.deleteLocation(location);\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n        \r\n    }\r\n\r\n    getData() {\r\n        return this.data;\r\n    }\r\n\r\n    refreshNavigation() {\r\n        this.navigationView.refreshNavigation(this.data);\r\n    }\r\n}","export default class StepController {\r\n    constructor(mainView, data) {\r\n        this.data = data;\r\n        this.mainView = mainView;\r\n    }\r\n\r\n    setStep(loc) {\r\n        // let location = this.data.getLocation(loc);\r\n\r\n        // console.log(location);\r\n\r\n        // if(location.name == null || locations.visitors == null) {\r\n        //     this.mainView.generateStep(this.data,1, location);\r\n        // }\r\n    }\r\n}","import Grid from \"../Models/Grid\"\r\n\r\nexport default class GridController {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.mainGrid = new Grid();\r\n\r\n        this.tenten = 3;\r\n        this.eetkramen = 2;\r\n        this.drankkramen = 1;\r\n        this.toiletten = 4;\r\n        this.prullenbakken = 5;\r\n        this.hogebomen = 2;\r\n        this.bredebomen = 3;\r\n        this.schaduwbomen = 1;\r\n    }\r\n\r\n    getData() {\r\n        return data;\r\n    }\r\n\r\n    isGridFilled(coordinates){\r\n\r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n\r\n        return this.mainGrid.array[x][y].getFilled();\r\n    }\r\n\r\n    setGridFill(coordinates, type){\r\n        \r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n        x = parseInt(x);\r\n        y = parseInt(y);\r\n        \r\n        let canPlace = this.mainGrid.canPlace(x,y,type);\r\n        if(canPlace) {\r\n            alert(\"You can't place this item right here\");\r\n            return;\r\n        }\r\n        this.mainGrid.placeItem(x,y,type);\r\n    }\r\n\r\n    deleteGridFill(coordinates, type) {\r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n        x = parseInt(x);\r\n        y = parseInt(y);\r\n        \r\n\r\n        this.mainGrid.deleteItem(x,y,type);\r\n    }\r\n    getItem(x,y) {\r\n        return this.mainGrid.getItem(x,y);\r\n    }\r\n\r\n    updateGridImages(type){\r\n        switch(type){\r\n            case \"tent\":\r\n                this.tenten--;\r\n                break;\r\n            case \"drink\":\r\n                this.drankkramen--;\r\n                break;\r\n            case \"food\":\r\n                this.eetkramen--;\r\n                break;\r\n            case \"toilet\":\r\n                this.toiletten--;\r\n                break;\r\n            case \"prullenbak\":\r\n                this.prullenbakken--;\r\n                break;\r\n            case \"hogeboom\":\r\n                this.hogebomen--;\r\n                break;\r\n            case \"bredeboom\":\r\n                this.bredebomen--;\r\n                break;\r\n            case \"schaduwboom\":\r\n                this.schaduwbomen--;\r\n                break;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}