{"version":3,"sources":["webpack://webjs/./src/Models/location.js","webpack://webjs/./src/Models/GridBlock.js","webpack://webjs/./src/Models/Grid.js","webpack://webjs/./src/Models/Location.js","webpack://webjs/./src/index.js","webpack://webjs/./src/Models/Data.js","webpack://webjs/./src/Views/MainView.js","webpack://webjs/./src/Views/NavigationView.js","webpack://webjs/./src/Views/GridView.js","webpack://webjs/./src/Controllers/MainController.js","webpack://webjs/./src/Controllers/NavigationController.js","webpack://webjs/./src/Controllers/StepController.js","webpack://webjs/./src/Controllers/GridController.js"],"names":["Location","name","this","amount","visitors","GridBlock","isFilled","fillType","newIsFilled","newFillType","Grid","array","i","j","jsonString","localStorage","getItem","dataobject","JSON","parse","console","log","locations","length","currentLocation","location","push","splice","setItem","stringify","mainView","windowSize","gridSize","paneSize","mainController","navigationController","stepController","data","step","generateStep1","block","document","getElementById","className","nameInput","createElement","setAttribute","id","nameInputLabel","htmlFor","innerHTML","inputblock1","appendChild","visitorsInput","visitorsInputLabel","inputblock2","submitButton","navigationView","addEventListener","addLocation","refreshNavigation","getData","deleteLocation","generateLocationMenu","clearNavigation","nav","forEach","navItem","deleteButton","deletebutton","elements","getElementsByClassName","parentNode","removeChild","gridView","gridController","generateGrid","generateImages","dropEvents","grid","style","position","width","height","rows","cols","addGridPane","x","y","gridPane","left","top","imageBlock","tenten","generateImage","drankkramen","eetkramen","toiletten","bredebomen","hogebomen","prullenbakken","schaduwbomen","type","image","src","amountInputLabel","inputblock","dropzones","querySelector","element","startEvent","e","target","preventDefault","insertBefore","firstChild","setGridFill","stopImmediatePropagation","loc","mainGrid","coordinates","slice","indexOf","getFilled","setFill","setFilled","init"],"mappings":"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","file":"main.js","sourcesContent":["export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n        \r\n        \r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","export default class GridBlock {\r\n    \r\n    constructor() {\r\n        this.isFilled = false;\r\n        this.fillType = null;\r\n    }\r\n\r\n    setFilled(newIsFilled) {\r\n        this.isFilled = newIsFilled;\r\n    }\r\n\r\n    getFilled() {\r\n        return this.isFilled;\r\n    }\r\n\r\n    setFillType(newFillType) {\r\n        this.fillType = newFillType;\r\n    }\r\n\r\n    getFillType() {\r\n        return this.fillType;\r\n    }\r\n}","import GridBlock from \"../Models/GridBlock\";\r\n\r\nexport default class Grid {\r\n    \r\n    constructor() {\r\n        this.array = [];\r\n        for (var i = 0; i < 15; i++) {\r\n            this.array[i] = [];\r\n            for (var j = 0; j < 15; j++) {\r\n                this.array[i][j] = new GridBlock();\r\n            }\r\n        }\r\n    }\r\n}","export default class Location {\r\n    setName(name) {\r\n        this.name = name;\r\n        \r\n        \r\n    }\r\n\r\n    setAmountOfVisitors(amount) {\r\n        this.visitors = visitors;\r\n    }\r\n}","import MainController from './Controllers/MainController.js'\r\nimport NavigationController from './Controllers/NavigationController.js'\r\nimport StepController from './Controllers/StepController.js'\r\nimport GridController from './Controllers/GridController.js'\r\n\r\nimport MainView from './Views/MainView.js'\r\nimport NavigationView from './Views/NavigationView.js'\r\nimport GridView from './Views/GridView.js'\r\n\r\nimport Data from './Models/Data.js'\r\n\r\nlet jsonString = localStorage.getItem('data');\r\nlet dataobject = JSON.parse(jsonString);\r\nconsole.log(dataobject);\r\n\r\nconst data = new Data(dataobject);\r\n\r\n\r\nlocalStorage.setItem('data', JSON.stringify(data));\r\n\r\nconst mainView = new MainView();\r\nconst navigationView = new NavigationView();\r\nconst gridView = new GridView();\r\n\r\nconst mainController = new MainController(mainView,data);\r\nconst navigationController = new NavigationController(navigationView,data);\r\nconst stepController = new StepController(mainView,data);\r\nconst gridController = new GridController(gridView, data);\r\n\r\nmainView.init(mainController, navigationController, stepController);\r\nnavigationView.init(mainController, navigationController, stepController);\r\ngridView.init(gridController);\r\n\r\n\r\n\r\n","import Location from \"./Location\"\r\n\r\nexport default class Data {\r\n    constructor(dataobject) {\r\n        if(dataobject.locations.length <= 0) {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        else if(dataobject != null) {\r\n            console.log(\"hier\");\r\n            this.locations = dataobject.locations;\r\n            this.currentLocation = dataobject.currentLocation;\r\n        } else {\r\n            this.locations = [new Location()];\r\n            this.currentLocation = null;\r\n        }\r\n        console.log(this)\r\n    }\r\n\r\n    addLocation(location) {\r\n        this.locations.push(location);\r\n    }\r\n    deleteLocation(location) {\r\n        this.locations.splice(location - 1,1)\r\n    }\r\n    getLocation(location) {\r\n        return this.locations[location - 1];\r\n    }\r\n}","export default class MainView {\r\n    constructor() {\r\n       this.windowSize = 750;\r\n       this.gridSize = 15;\r\n       this.paneSize = this.windowSize / this.gridSize;\r\n    }\r\n\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n\r\n    \r\n    }\r\n\r\n    generateStep(data, step, location) {\r\n        switch (step) {\r\n            case 1: this.generateStep1(data); break;\r\n            case 2: console.log(\"stap 2\"); break;\r\n            default: console.log(step + \"default zou niet moeten!\"); break;\r\n        }\r\n    }\r\n\r\n    generateStep1(data) {\r\n        let block = document.getElementById(\"configuration_block\");\r\n        block.className = 'h-full';\r\n        let nameInput = document.createElement(\"input\");\r\n        nameInput.setAttribute('type', 'text');\r\n        nameInput.id = 'nameInput';\r\n        let nameInputLabel = document.createElement(\"label\");\r\n        nameInputLabel.htmlFor = 'nameInput';\r\n        nameInputLabel.innerHTML = 'Name: ';\r\n\r\n        let inputblock1 = document.createElement(\"div\");\r\n        inputblock1.appendChild(nameInputLabel);\r\n        inputblock1.appendChild(nameInput);\r\n\r\n        let visitorsInput = document.createElement(\"input\");\r\n        visitorsInput.setAttribute('type', 'number');\r\n        visitorsInput.id = 'visitorsInput';\r\n        let visitorsInputLabel = document.createElement(\"label\");\r\n        visitorsInputLabel.htmlFor = 'visitorseInput';\r\n        visitorsInputLabel.innerHTML = 'Visitors: ';\r\n\r\n        let inputblock2 = document.createElement(\"div\");\r\n\r\n        let submitButton = document.createElement(\"button\");\r\n        submitButton.innerHTML = 'next step';\r\n        submitButton.className = 'p-2 bg-green-500 hover:bg-green-800 hover:text-white w-full';\r\n        \r\n        inputblock1.className = \"mb-5 flex flex-col\";\r\n        inputblock2.className = \"mb-5 flex flex-col\";\r\n\r\n        inputblock2.appendChild(visitorsInputLabel);\r\n        inputblock2.appendChild(visitorsInput);\r\n\r\n        block.appendChild(inputblock1);\r\n        block.appendChild(inputblock2);\r\n        block.appendChild(submitButton);\r\n        \r\n        \r\n    }\r\n\r\n    \r\n} ","export default class NavigationView {\r\n    constructor() {\r\n\r\n    }\r\n    init(mainController, navigationController, stepController) {\r\n        this.mainController = mainController;\r\n        this.navigationController = navigationController;\r\n        this.stepController = stepController;\r\n        const addLocationButton = document.getElementById('addLocation');\r\n        \r\n        addLocationButton.addEventListener('click', () => {this.addLocation()});\r\n        this.navigationController.refreshNavigation();\r\n\r\n    \r\n       \r\n       \r\n    }\r\n\r\n    test() {\r\n        console.log(navigationController.getData());\r\n    }\r\n    \r\n    \r\n    deleteLocation(i) {\r\n        this.navigationController.deleteLocation(i);\r\n    }\r\n\r\n    addLocation() {\r\n        this.navigationController.addLocation();\r\n    }\r\n\r\n\r\n    refreshNavigation(data) {\r\n        this.generateLocationMenu(data);\r\n    }\r\n\r\n    generateLocationMenu(data) {\r\n        this.clearNavigation();\r\n        const nav = document.getElementById(\"nav\");\r\n        let i =1;\r\n        data.locations.forEach( function(location) {\r\n            let name = 'naam onbekend';\r\n            if(location.name != null) {\r\n                let name = location.name;\r\n            }\r\n            const navItem = document.createElement(\"button\");\r\n            navItem.innerHTML = `Naam`;\r\n            navItem.className = `navbutton bg-gray-200 p-3 pb-2 hover:bg-gray-500 hover:text-white flex flex-row`;\r\n            navItem.id = `location${i}`;\r\n            \r\n            const deleteButton = document.createElement(\"button\");\r\n            deleteButton.id = `deletelocation${i}`;\r\n            deleteButton.className = ` bg-red-500 hover:bg-red-800 hover:text-white ml-4 pr-2 pl-2`;\r\n            deleteButton.innerHTML = `X`;\r\n\r\n            navItem.appendChild(deleteButton);\r\n            nav.appendChild(navItem);\r\n            i++;\r\n        }\r\n        )\r\n        for(let i = 1; i <= data.locations.length; i++) {\r\n            let deletebutton = document.getElementById(`deletelocation${i}`);\r\n            console.log(deletebutton)\r\n            deletebutton.addEventListener('click', () => { this.deleteLocation(i)});\r\n        }   \r\n        \r\n    }\r\n\r\n    clearNavigation() {\r\n        let elements = document.getElementsByClassName('navbutton');\r\n        while(elements.length > 0){\r\n            elements[0].parentNode.removeChild(elements[0]);\r\n        }\r\n    }\r\n}","export default class GridView {\r\n    \r\n    constructor() {\r\n        this.windowSize = 750;\r\n        this.gridSize = 15;\r\n        this.paneSize = this.windowSize / this.gridSize;\r\n     }\r\n\r\n    init(gridController) {\r\n        this.gridController =  gridController;\r\n        this.generateGrid();\r\n        this.generateImages();\r\n        this.dropEvents();\r\n    }\r\n\r\n\r\n    generateGrid() {\r\n        let paneSize = this.paneSize;\r\n        let windowSize = this.windowSize;\r\n        console.log(paneSize);\r\n        const grid = document.getElementById(\"grid\");\r\n                        grid.style.position = \"relative\";\r\n                        grid.style.width = `${windowSize}px`;\r\n                        grid.style.height = `${windowSize}px`;\r\n                        \r\n        let rows = this.gridSize;\r\n                    let cols = this.gridSize;\r\n                    for(let i = 0; i < rows; i++) {\r\n                        for(let j = 0; j < cols; j++) {\r\n                            addGridPane(j, i);\r\n                        }\r\n                    }\r\n                    function addGridPane(x, y) {\r\n                        const gridPane = document.createElement(\"div\");\r\n                        gridPane.className =  `border gridpane absolute border border-black hover:bg-gray-400 dropzone`;\r\n                        gridPane.id = `x${x}y${y}`;\r\n                        gridPane.style.left = `${x * paneSize}px`;\r\n                        gridPane.style.top = `${y * paneSize}px`;\r\n                        gridPane.style.height = `${paneSize}px`;\r\n                        gridPane.style.width = `${paneSize}px`;\r\n                        gridPane.style.position = \"absolute\";\r\n                        grid.appendChild(gridPane);\r\n                    }\r\n    }\r\n   \r\n    generateImages() {\r\n        let block = document.getElementById(\"images_block\");\r\n        block.className = 'h-full draggable-items';\r\n\r\n        let imageBlock = document.createElement(\"div\");\r\n        imageBlock.className = \"mb-5 flex flex-col\";\r\n        imageBlock.id = \"imageList\"\r\n        imageBlock.setAttribute('draggable', 'true');\r\n        imageBlock.style.width = 50 + \"px\";\r\n        imageBlock.style.height = 50 + \"px\";\r\n\r\n        if(this.gridController.tenten > 0) this.generateImage('tent', imageBlock, 'Tenten', this.gridController.tenten);\r\n        if(this.gridController.drankkramen > 0)this.generateImage('drink', imageBlock, 'Drankkramen', this.gridController.drankkramen);\r\n        if(this.gridController.eetkramen > 0)this.generateImage('food', imageBlock, 'Eetkramen', this.gridController.eetkramen);\r\n        if(this.gridController.toiletten > 0)this.generateImage('toilet', imageBlock, 'Toiletten', this.gridController.toiletten);\r\n        if(this.gridController.bredebomen > 0)this.generateImage('bredeboom', imageBlock, 'Bredebomen', this.gridController.bredebomen);\r\n        if(this.gridController.hogebomen > 0)this.generateImage('hogeboom', imageBlock, 'Hogebomen', this.gridController.hogebomen);\r\n        if(this.gridController.prullenbakken > 0)this.generateImage('prullenbak', imageBlock, 'Prullenbakken', this.gridController.prullenbakken);\r\n        if(this.gridController.schaduwbomen > 0)this.generateImage('schaduwboom', imageBlock, 'Schaduwbomen', this.gridController.schaduwbomen);\r\n\r\n        block.appendChild(imageBlock);\r\n    } \r\n\r\n    generateImage(type, imageBlock, name, amount){\r\n\r\n        var image = document.createElement(\"img\");\r\n        image.src = \"../src/images/\"+ type +\".png\";\r\n        image.id = type;\r\n        image.setAttribute('draggable', 'true');\r\n\r\n        let amountInputLabel = document.createElement(\"label\");\r\n        amountInputLabel.htmlFor = 'amountInput';\r\n        amountInputLabel.innerHTML = name + '=' + amount;\r\n\r\n        let inputblock = document.createElement(\"div\");\r\n        inputblock.appendChild(image);\r\n        inputblock.appendChild(amountInputLabel);\r\n        inputblock.className = \"mb-4 flex flex-col w-full\";\r\n\r\n        imageBlock.appendChild(inputblock);\r\n    }\r\n\r\n    dropEvents(){\r\n        const dropzones = document.querySelector('.dropzones');\r\n\r\n        let element = null;\r\n        let event = null;\r\n        function startEvent(e) {\r\n            element = e.target;\r\n        }\r\n        document\r\n            .querySelector('.draggable-items')\r\n            .addEventListener('dragstart', startEvent, false);\r\n\r\n        dropzones.addEventListener('dragover', (e) => {\r\n            e.preventDefault();\r\n        }); \r\n\r\n        dropzones.addEventListener('drop', (e) => {\r\n            \r\n            e.preventDefault();\r\n\r\n                e.target.insertBefore(element,e.target.firstChild);\r\n                this.gridController.setGridFill(e.target.id, element.id);\r\n                \r\n\r\n                element.addEventListener('dragstart', startEvent);\r\n            e.stopImmediatePropagation()\r\n            \r\n        });       \r\n\r\n        \r\n    }\r\n}","import Grid from \"../Models/Grid\"\r\n\r\nexport default class MainController {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n}\r\n","import Location from \"../Models/location\"\r\n\r\nexport default class NavigationController {\r\n    constructor(navigationView, data) {\r\n        this.data = data;\r\n        this.navigationView = navigationView;\r\n    }\r\n\r\n    addLocation() {\r\n        this.data.addLocation(new Location());\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n\r\n    }\r\n\r\n    deleteLocation(location) {\r\n        this.data.deleteLocation(location);\r\n        localStorage.setItem('data', JSON.stringify(this.data));\r\n\r\n        this.navigationView.refreshNavigation(this.data);\r\n        \r\n    }\r\n\r\n    getData() {\r\n        return this.data;\r\n    }\r\n\r\n    refreshNavigation() {\r\n        this.navigationView.refreshNavigation(this.data);\r\n    }\r\n}","export default class StepController {\r\n    constructor(mainView, data) {\r\n        this.data = data;\r\n        this.mainView = mainView;\r\n    }\r\n\r\n    setStep(loc) {\r\n        // let location = this.data.getLocation(loc);\r\n\r\n        // console.log(location);\r\n\r\n        // if(location.name == null || locations.visitors == null) {\r\n        //     this.mainView.generateStep(this.data,1, location);\r\n        // }\r\n    }\r\n}","import Grid from \"../Models/Grid\"\r\n\r\nexport default class GridController {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.mainGrid = new Grid();\r\n\r\n        this.tenten = 3;\r\n        this.eetkramen = 2;\r\n        this.drankkramen = 1;\r\n        this.toiletten = 4;\r\n        this.prullenbakken = 5;\r\n        this.hogebomen = 2;\r\n        this.bredebomen = 3;\r\n        this.schaduwbomen = 1;\r\n    }\r\n\r\n    getData() {\r\n        return data;\r\n    }\r\n\r\n    isGridFilled(coordinates){\r\n\r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n\r\n        return this.mainGrid.array[x][y].getFilled();\r\n    }\r\n\r\n    setGridFill(coordinates, setFill){\r\n\r\n        let x = coordinates.slice(coordinates.indexOf('x') + 1 ,coordinates.indexOf('y'));\r\n        let y = coordinates.slice(coordinates.indexOf('y') + 1 ,coordinates.length);\r\n\r\n        this.mainGrid.array[x][y].setFilled(setFill);\r\n        console.log(this.mainGrid.array[x][y]);\r\n    }\r\n\r\n    updateGridImages(type){\r\n        switch(type){\r\n            case \"tent\":\r\n                this.tenten--;\r\n                break;\r\n            case \"drink\":\r\n                this.drankkramen--;\r\n                break;\r\n            case \"food\":\r\n                this.eetkramen--;\r\n                break;\r\n            case \"toilet\":\r\n                this.toiletten--;\r\n                break;\r\n            case \"prullenbak\":\r\n                this.prullenbakken--;\r\n                break;\r\n            case \"hogeboom\":\r\n                this.hogebomen--;\r\n                break;\r\n            case \"bredeboom\":\r\n                this.bredebomen--;\r\n                break;\r\n            case \"schaduwboom\":\r\n                this.schaduwbomen--;\r\n                break;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}